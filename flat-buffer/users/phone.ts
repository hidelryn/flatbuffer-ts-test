// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class Phone {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):Phone {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

first():number {
  return this.bb!.readInt32(this.bb_pos);
}

second():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

third():number {
  return this.bb!.readInt32(this.bb_pos + 8);
}

static sizeOf():number {
  return 12;
}

static createPhone(builder:flatbuffers.Builder, first: number, second: number, third: number):flatbuffers.Offset {
  builder.prep(4, 12);
  builder.writeInt32(third);
  builder.writeInt32(second);
  builder.writeInt32(first);
  return builder.offset();
}

}
